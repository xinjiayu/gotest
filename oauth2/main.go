package main  import (     "log"     "net/http"      "gopkg.in/oauth2.v2/manage"     "gopkg.in/oauth2.v2/models"     "gopkg.in/oauth2.v2/server"     "gopkg.in/oauth2.v2/store/client"     "gopkg.in/oauth2.v2/store/token" )  func main() {     manager := manage.NewRedisManager(         &token.RedisConfig{Addr: "192.168.33.70:6379"},     )     manager.MapClientStorage(client.NewTempStore())     srv := server.NewServer(server.NewConfig(), manager)      http.HandleFunc("/authorize", func(w http.ResponseWriter, r *http.Request) {         authReq, err := srv.GetAuthorizeRequest(r)         if err != nil {             http.Error(w, err.Error(), http.StatusBadRequest)             return         }         // TODO: 登录验证、授权处理         authReq.UserID = "000000"          err = srv.HandleAuthorizeRequest(w, authReq)         if err != nil {             http.Error(w, err.Error(), http.StatusBadRequest)         }     })      http.HandleFunc("/token", func(w http.ResponseWriter, r *http.Request) {         err := srv.HandleTokenRequest(w, r)         if err != nil {             http.Error(w, err.Error(), http.StatusBadRequest)         }     })      log.Fatal(http.ListenAndServe(":9096", nil)) }  